// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: monolith/types.proto

package monolith

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyType int32

const (
	KeyType_KEYTYPE_UNSPECIFIED KeyType = 0
	KeyType_KEYTYPE_OKP         KeyType = 1 // Octet Key Pair
)

// Enum value maps for KeyType.
var (
	KeyType_name = map[int32]string{
		0: "KEYTYPE_UNSPECIFIED",
		1: "KEYTYPE_OKP",
	}
	KeyType_value = map[string]int32{
		"KEYTYPE_UNSPECIFIED": 0,
		"KEYTYPE_OKP":         1,
	}
)

func (x KeyType) Enum() *KeyType {
	p := new(KeyType)
	*p = x
	return p
}

func (x KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_types_proto_enumTypes[0].Descriptor()
}

func (KeyType) Type() protoreflect.EnumType {
	return &file_monolith_types_proto_enumTypes[0]
}

func (x KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyType.Descriptor instead.
func (KeyType) EnumDescriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{0}
}

type KeyUse int32

const (
	KeyUse_USE_UNSPECIFIED KeyUse = 0
	KeyUse_USE_ENC         KeyUse = 1 // Encryption
	KeyUse_USE_SIG         KeyUse = 2 // Signature
)

// Enum value maps for KeyUse.
var (
	KeyUse_name = map[int32]string{
		0: "USE_UNSPECIFIED",
		1: "USE_ENC",
		2: "USE_SIG",
	}
	KeyUse_value = map[string]int32{
		"USE_UNSPECIFIED": 0,
		"USE_ENC":         1,
		"USE_SIG":         2,
	}
)

func (x KeyUse) Enum() *KeyUse {
	p := new(KeyUse)
	*p = x
	return p
}

func (x KeyUse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyUse) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_types_proto_enumTypes[1].Descriptor()
}

func (KeyUse) Type() protoreflect.EnumType {
	return &file_monolith_types_proto_enumTypes[1]
}

func (x KeyUse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyUse.Descriptor instead.
func (KeyUse) EnumDescriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{1}
}

type Algorithm int32

const (
	Algorithm_ALG_UNSPECIFIED Algorithm = 0
	Algorithm_ALG_EDDSA       Algorithm = 1 // EdDSA algorithm
)

// Enum value maps for Algorithm.
var (
	Algorithm_name = map[int32]string{
		0: "ALG_UNSPECIFIED",
		1: "ALG_EDDSA",
	}
	Algorithm_value = map[string]int32{
		"ALG_UNSPECIFIED": 0,
		"ALG_EDDSA":       1,
	}
)

func (x Algorithm) Enum() *Algorithm {
	p := new(Algorithm)
	*p = x
	return p
}

func (x Algorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_types_proto_enumTypes[2].Descriptor()
}

func (Algorithm) Type() protoreflect.EnumType {
	return &file_monolith_types_proto_enumTypes[2]
}

func (x Algorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algorithm.Descriptor instead.
func (Algorithm) EnumDescriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{2}
}

type Curve int32

const (
	Curve_CRV_UNSPECIFIED Curve = 0
	Curve_CRV_ED25519     Curve = 1 // Ed25519 curve
)

// Enum value maps for Curve.
var (
	Curve_name = map[int32]string{
		0: "CRV_UNSPECIFIED",
		1: "CRV_ED25519",
	}
	Curve_value = map[string]int32{
		"CRV_UNSPECIFIED": 0,
		"CRV_ED25519":     1,
	}
)

func (x Curve) Enum() *Curve {
	p := new(Curve)
	*p = x
	return p
}

func (x Curve) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Curve) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_types_proto_enumTypes[3].Descriptor()
}

func (Curve) Type() protoreflect.EnumType {
	return &file_monolith_types_proto_enumTypes[3]
}

func (x Curve) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Curve.Descriptor instead.
func (Curve) EnumDescriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{3}
}

type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kty KeyType   `protobuf:"varint,1,opt,name=kty,proto3,enum=monolith.KeyType" json:"kty,omitempty"`   // Key Type; for Ed25519 this will likely be KEYTYPE_OKP
	Use KeyUse    `protobuf:"varint,2,opt,name=use,proto3,enum=monolith.KeyUse" json:"use,omitempty"`    // Use (either USE_ENC or USE_SIG)
	Kid string    `protobuf:"bytes,3,opt,name=kid,proto3" json:"kid,omitempty"`                          // Key ID
	Alg Algorithm `protobuf:"varint,4,opt,name=alg,proto3,enum=monolith.Algorithm" json:"alg,omitempty"` // Algorithm intended for use; for Ed25519 this will be ALG_EDDSA
	Crv Curve     `protobuf:"varint,5,opt,name=crv,proto3,enum=monolith.Curve" json:"crv,omitempty"`     // Curve name; for Ed25519 this will always be CRV_ED25519
	X   []byte    `protobuf:"bytes,6,opt,name=x,proto3" json:"x,omitempty"`                              // Public key for Ed25519
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{0}
}

func (x *PublicKey) GetKty() KeyType {
	if x != nil {
		return x.Kty
	}
	return KeyType_KEYTYPE_UNSPECIFIED
}

func (x *PublicKey) GetUse() KeyUse {
	if x != nil {
		return x.Use
	}
	return KeyUse_USE_UNSPECIFIED
}

func (x *PublicKey) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *PublicKey) GetAlg() Algorithm {
	if x != nil {
		return x.Alg
	}
	return Algorithm_ALG_UNSPECIFIED
}

func (x *PublicKey) GetCrv() Curve {
	if x != nil {
		return x.Crv
	}
	return Curve_CRV_UNSPECIFIED
}

func (x *PublicKey) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

type PrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kty KeyType   `protobuf:"varint,1,opt,name=kty,proto3,enum=monolith.KeyType" json:"kty,omitempty"`   // Key Type; for Ed25519 this will likely be KEYTYPE_OKP
	Use KeyUse    `protobuf:"varint,2,opt,name=use,proto3,enum=monolith.KeyUse" json:"use,omitempty"`    // Use (either USE_ENC or USE_SIG)
	Kid string    `protobuf:"bytes,3,opt,name=kid,proto3" json:"kid,omitempty"`                          // Key ID
	Alg Algorithm `protobuf:"varint,4,opt,name=alg,proto3,enum=monolith.Algorithm" json:"alg,omitempty"` // Algorithm intended for use; for Ed25519 this will be ALG_EDDSA
	Crv Curve     `protobuf:"varint,5,opt,name=crv,proto3,enum=monolith.Curve" json:"crv,omitempty"`     // Curve name; for Ed25519 this will always be CRV_ED25519
	D   []byte    `protobuf:"bytes,6,opt,name=d,proto3" json:"d,omitempty"`                              // Private key for Ed25519
}

func (x *PrivateKey) Reset() {
	*x = PrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey) ProtoMessage() {}

func (x *PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey.ProtoReflect.Descriptor instead.
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{1}
}

func (x *PrivateKey) GetKty() KeyType {
	if x != nil {
		return x.Kty
	}
	return KeyType_KEYTYPE_UNSPECIFIED
}

func (x *PrivateKey) GetUse() KeyUse {
	if x != nil {
		return x.Use
	}
	return KeyUse_USE_UNSPECIFIED
}

func (x *PrivateKey) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *PrivateKey) GetAlg() Algorithm {
	if x != nil {
		return x.Alg
	}
	return Algorithm_ALG_UNSPECIFIED
}

func (x *PrivateKey) GetCrv() Curve {
	if x != nil {
		return x.Crv
	}
	return Curve_CRV_UNSPECIFIED
}

func (x *PrivateKey) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Hash    string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{2}
}

func (x *Identity) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Identity) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transport string `protobuf:"bytes,1,opt,name=transport,proto3" json:"transport,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Port      uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Address) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type PeerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []*Address `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	PublicKey *PublicKey `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{4}
}

func (x *PeerInfo) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *PeerInfo) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type BrokerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *Identity   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Peers []*PeerInfo `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *BrokerInfo) Reset() {
	*x = BrokerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerInfo) ProtoMessage() {}

func (x *BrokerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerInfo.ProtoReflect.Descriptor instead.
func (*BrokerInfo) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{5}
}

func (x *BrokerInfo) GetId() *Identity {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BrokerInfo) GetPeers() []*PeerInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

type ProviderServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *ProviderServiceInfo) Reset() {
	*x = ProviderServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderServiceInfo) ProtoMessage() {}

func (x *ProviderServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderServiceInfo.ProtoReflect.Descriptor instead.
func (*ProviderServiceInfo) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{6}
}

func (x *ProviderServiceInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type ProviderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *Identity              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Peer     *PeerInfo              `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Services []*ProviderServiceInfo `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *ProviderInfo) Reset() {
	*x = ProviderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderInfo) ProtoMessage() {}

func (x *ProviderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderInfo.ProtoReflect.Descriptor instead.
func (*ProviderInfo) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{7}
}

func (x *ProviderInfo) GetId() *Identity {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProviderInfo) GetPeer() *PeerInfo {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *ProviderInfo) GetServices() []*ProviderServiceInfo {
	if x != nil {
		return x.Services
	}
	return nil
}

type AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *Identity       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Peer      *PeerInfo       `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Brokers   []*BrokerInfo   `protobuf:"bytes,3,rep,name=brokers,proto3" json:"brokers,omitempty"`
	Providers []*ProviderInfo `protobuf:"bytes,4,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_monolith_types_proto_rawDescGZIP(), []int{8}
}

func (x *AccountInfo) GetId() *Identity {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AccountInfo) GetPeer() *PeerInfo {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *AccountInfo) GetBrokers() []*BrokerInfo {
	if x != nil {
		return x.Brokers
	}
	return nil
}

func (x *AccountInfo) GetProviders() []*ProviderInfo {
	if x != nil {
		return x.Providers
	}
	return nil
}

var File_monolith_types_proto protoreflect.FileDescriptor

var file_monolith_types_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68,
	0x22, 0xbe, 0x01, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x03, 0x6b, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03,
	0x6b, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x4b, 0x65, 0x79, 0x55,
	0x73, 0x65, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x61, 0x6c, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74,
	0x68, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x03, 0x61, 0x6c, 0x67,
	0x12, 0x21, 0x0a, 0x03, 0x63, 0x72, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x52, 0x03,
	0x63, 0x72, 0x76, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x78, 0x22, 0xbf, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x03, 0x6b, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x03, 0x6b, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x4b, 0x65,
	0x79, 0x55, 0x73, 0x65, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x61,
	0x6c, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c,
	0x69, 0x74, 0x68, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x03, 0x61,
	0x6c, 0x67, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x72, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x43, 0x75, 0x72, 0x76, 0x65,
	0x52, 0x03, 0x63, 0x72, 0x76, 0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x64, 0x22, 0x38, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x55, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x6f, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2f, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x5a, 0x0a, 0x0a, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74,
	0x68, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72,
	0x73, 0x22, 0x2b, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x95,
	0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c,
	0x69, 0x74, 0x68, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2a, 0x33, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x45, 0x59, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x4b, 0x45, 0x59, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4b, 0x50, 0x10, 0x01, 0x2a, 0x37, 0x0a,
	0x06, 0x4b, 0x65, 0x79, 0x55, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x53, 0x45, 0x5f, 0x45, 0x4e, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x45,
	0x5f, 0x53, 0x49, 0x47, 0x10, 0x02, 0x2a, 0x2f, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4c, 0x47, 0x5f,
	0x45, 0x44, 0x44, 0x53, 0x41, 0x10, 0x01, 0x2a, 0x2d, 0x0a, 0x05, 0x43, 0x75, 0x72, 0x76, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x52, 0x56, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x52, 0x56, 0x5f, 0x45, 0x44, 0x32,
	0x35, 0x35, 0x31, 0x39, 0x10, 0x01, 0x42, 0x24, 0x5a, 0x22, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x65,
	0x2e, 0x64, 0x65, 0x76, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monolith_types_proto_rawDescOnce sync.Once
	file_monolith_types_proto_rawDescData = file_monolith_types_proto_rawDesc
)

func file_monolith_types_proto_rawDescGZIP() []byte {
	file_monolith_types_proto_rawDescOnce.Do(func() {
		file_monolith_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_monolith_types_proto_rawDescData)
	})
	return file_monolith_types_proto_rawDescData
}

var file_monolith_types_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_monolith_types_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_monolith_types_proto_goTypes = []interface{}{
	(KeyType)(0),                // 0: monolith.KeyType
	(KeyUse)(0),                 // 1: monolith.KeyUse
	(Algorithm)(0),              // 2: monolith.Algorithm
	(Curve)(0),                  // 3: monolith.Curve
	(*PublicKey)(nil),           // 4: monolith.PublicKey
	(*PrivateKey)(nil),          // 5: monolith.PrivateKey
	(*Identity)(nil),            // 6: monolith.Identity
	(*Address)(nil),             // 7: monolith.Address
	(*PeerInfo)(nil),            // 8: monolith.PeerInfo
	(*BrokerInfo)(nil),          // 9: monolith.BrokerInfo
	(*ProviderServiceInfo)(nil), // 10: monolith.ProviderServiceInfo
	(*ProviderInfo)(nil),        // 11: monolith.ProviderInfo
	(*AccountInfo)(nil),         // 12: monolith.AccountInfo
}
var file_monolith_types_proto_depIdxs = []int32{
	0,  // 0: monolith.PublicKey.kty:type_name -> monolith.KeyType
	1,  // 1: monolith.PublicKey.use:type_name -> monolith.KeyUse
	2,  // 2: monolith.PublicKey.alg:type_name -> monolith.Algorithm
	3,  // 3: monolith.PublicKey.crv:type_name -> monolith.Curve
	0,  // 4: monolith.PrivateKey.kty:type_name -> monolith.KeyType
	1,  // 5: monolith.PrivateKey.use:type_name -> monolith.KeyUse
	2,  // 6: monolith.PrivateKey.alg:type_name -> monolith.Algorithm
	3,  // 7: monolith.PrivateKey.crv:type_name -> monolith.Curve
	7,  // 8: monolith.PeerInfo.addresses:type_name -> monolith.Address
	4,  // 9: monolith.PeerInfo.public_key:type_name -> monolith.PublicKey
	6,  // 10: monolith.BrokerInfo.id:type_name -> monolith.Identity
	8,  // 11: monolith.BrokerInfo.peers:type_name -> monolith.PeerInfo
	6,  // 12: monolith.ProviderInfo.id:type_name -> monolith.Identity
	8,  // 13: monolith.ProviderInfo.peer:type_name -> monolith.PeerInfo
	10, // 14: monolith.ProviderInfo.services:type_name -> monolith.ProviderServiceInfo
	6,  // 15: monolith.AccountInfo.id:type_name -> monolith.Identity
	8,  // 16: monolith.AccountInfo.peer:type_name -> monolith.PeerInfo
	9,  // 17: monolith.AccountInfo.brokers:type_name -> monolith.BrokerInfo
	11, // 18: monolith.AccountInfo.providers:type_name -> monolith.ProviderInfo
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_monolith_types_proto_init() }
func file_monolith_types_proto_init() {
	if File_monolith_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monolith_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monolith_types_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_monolith_types_proto_goTypes,
		DependencyIndexes: file_monolith_types_proto_depIdxs,
		EnumInfos:         file_monolith_types_proto_enumTypes,
		MessageInfos:      file_monolith_types_proto_msgTypes,
	}.Build()
	File_monolith_types_proto = out.File
	file_monolith_types_proto_rawDesc = nil
	file_monolith_types_proto_goTypes = nil
	file_monolith_types_proto_depIdxs = nil
}
