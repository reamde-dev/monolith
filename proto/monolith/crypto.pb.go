// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: monolith/crypto.proto

package monolith

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Signature_Algorithm int32

const (
	Signature_TYPE_UNSPECIFIED Signature_Algorithm = 0
	Signature_TYPE_EDDSA       Signature_Algorithm = 1
)

// Enum value maps for Signature_Algorithm.
var (
	Signature_Algorithm_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_EDDSA",
	}
	Signature_Algorithm_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_EDDSA":       1,
	}
)

func (x Signature_Algorithm) Enum() *Signature_Algorithm {
	p := new(Signature_Algorithm)
	*p = x
	return p
}

func (x Signature_Algorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Signature_Algorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_crypto_proto_enumTypes[0].Descriptor()
}

func (Signature_Algorithm) Type() protoreflect.EnumType {
	return &file_monolith_crypto_proto_enumTypes[0]
}

func (x Signature_Algorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Signature_Algorithm.Descriptor instead.
func (Signature_Algorithm) EnumDescriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{4, 0}
}

type Hash_Algorithm int32

const (
	Hash_TYPE_UNSPECIFIED       Hash_Algorithm = 0
	Hash_TYPE_OBJECTHASH_SHA256 Hash_Algorithm = 1
)

// Enum value maps for Hash_Algorithm.
var (
	Hash_Algorithm_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_OBJECTHASH_SHA256",
	}
	Hash_Algorithm_value = map[string]int32{
		"TYPE_UNSPECIFIED":       0,
		"TYPE_OBJECTHASH_SHA256": 1,
	}
)

func (x Hash_Algorithm) Enum() *Hash_Algorithm {
	p := new(Hash_Algorithm)
	*p = x
	return p
}

func (x Hash_Algorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Hash_Algorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_monolith_crypto_proto_enumTypes[1].Descriptor()
}

func (Hash_Algorithm) Type() protoreflect.EnumType {
	return &file_monolith_crypto_proto_enumTypes[1]
}

func (x Hash_Algorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Hash_Algorithm.Descriptor instead.
func (Hash_Algorithm) EnumDescriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{5, 0}
}

type Ed25519Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // The key, 32 bytes for Ed25519
}

func (x *Ed25519Key) Reset() {
	*x = Ed25519Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_crypto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ed25519Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ed25519Key) ProtoMessage() {}

func (x *Ed25519Key) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_crypto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ed25519Key.ProtoReflect.Descriptor instead.
func (*Ed25519Key) Descriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *Ed25519Key) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type PrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyType:
	//
	//	*PrivateKey_Ed25519
	KeyType isPrivateKey_KeyType `protobuf_oneof:"key_type"`
}

func (x *PrivateKey) Reset() {
	*x = PrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_crypto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey) ProtoMessage() {}

func (x *PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_crypto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey.ProtoReflect.Descriptor instead.
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{1}
}

func (m *PrivateKey) GetKeyType() isPrivateKey_KeyType {
	if m != nil {
		return m.KeyType
	}
	return nil
}

func (x *PrivateKey) GetEd25519() *Ed25519Key {
	if x, ok := x.GetKeyType().(*PrivateKey_Ed25519); ok {
		return x.Ed25519
	}
	return nil
}

type isPrivateKey_KeyType interface {
	isPrivateKey_KeyType()
}

type PrivateKey_Ed25519 struct {
	Ed25519 *Ed25519Key `protobuf:"bytes,1,opt,name=ed25519,proto3,oneof"`
}

func (*PrivateKey_Ed25519) isPrivateKey_KeyType() {}

type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyType:
	//
	//	*PublicKey_Ed25519
	KeyType isPublicKey_KeyType `protobuf_oneof:"key_type"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_crypto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_crypto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{2}
}

func (m *PublicKey) GetKeyType() isPublicKey_KeyType {
	if m != nil {
		return m.KeyType
	}
	return nil
}

func (x *PublicKey) GetEd25519() *Ed25519Key {
	if x, ok := x.GetKeyType().(*PublicKey_Ed25519); ok {
		return x.Ed25519
	}
	return nil
}

type isPublicKey_KeyType interface {
	isPublicKey_KeyType()
}

type PublicKey_Ed25519 struct {
	Ed25519 *Ed25519Key `protobuf:"bytes,1,opt,name=ed25519,proto3,oneof"`
}

func (*PublicKey_Ed25519) isPublicKey_KeyType() {}

type KeyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateKey *PrivateKey `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PublicKey  *PublicKey  `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *KeyPair) Reset() {
	*x = KeyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_crypto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPair) ProtoMessage() {}

func (x *KeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_crypto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPair.ProtoReflect.Descriptor instead.
func (*KeyPair) Descriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{3}
}

func (x *KeyPair) GetPrivateKey() *PrivateKey {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *KeyPair) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *Signature_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Signature []byte            `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_crypto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_crypto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{4}
}

func (x *Signature) GetHeader() *Signature_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Signature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm Hash_Algorithm `protobuf:"varint,1,opt,name=algorithm,proto3,enum=monolith.Hash_Algorithm" json:"algorithm,omitempty"`
	Type      string         `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Hash      []byte         `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_crypto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_crypto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{5}
}

func (x *Hash) GetAlgorithm() Hash_Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return Hash_TYPE_UNSPECIFIED
}

func (x *Hash) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Hash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Signature_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorthm    Signature_Algorithm `protobuf:"varint,1,opt,name=algorthm,proto3,enum=monolith.Signature_Algorithm" json:"algorthm,omitempty"`
	Fingerprint *Hash               `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"` // Public key fingerprint
}

func (x *Signature_Header) Reset() {
	*x = Signature_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monolith_crypto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature_Header) ProtoMessage() {}

func (x *Signature_Header) ProtoReflect() protoreflect.Message {
	mi := &file_monolith_crypto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature_Header.ProtoReflect.Descriptor instead.
func (*Signature_Header) Descriptor() ([]byte, []int) {
	return file_monolith_crypto_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Signature_Header) GetAlgorthm() Signature_Algorithm {
	if x != nil {
		return x.Algorthm
	}
	return Signature_TYPE_UNSPECIFIED
}

func (x *Signature_Header) GetFingerprint() *Hash {
	if x != nil {
		return x.Fingerprint
	}
	return nil
}

var File_monolith_crypto_proto protoreflect.FileDescriptor

var file_monolith_crypto_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74,
	0x68, 0x22, 0x1e, 0x0a, 0x0a, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x4b, 0x65, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x4a, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x07, 0x65, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x45, 0x64, 0x32, 0x35,
	0x35, 0x31, 0x39, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x07, 0x65, 0x64, 0x32, 0x35, 0x35, 0x31,
	0x39, 0x42, 0x0a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x49, 0x0a,
	0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x65, 0x64,
	0x32, 0x35, 0x35, 0x31, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x4b, 0x65,
	0x79, 0x48, 0x00, 0x52, 0x07, 0x65, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x42, 0x0a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x74, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c,
	0x69, 0x74, 0x68, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x87,
	0x02, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x75,
	0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x6c, 0x67, 0x6f,
	0x72, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x08, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x74, 0x68, 0x6d, 0x12, 0x30, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c,
	0x69, 0x74, 0x68, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x45, 0x44, 0x44, 0x53, 0x41, 0x10, 0x01, 0x22, 0xa5, 0x01, 0x0a, 0x04, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x22, 0x3d, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x01,
	0x42, 0x7f, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68,
	0x42, 0x0b, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x22, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f,
	0x6c, 0x69, 0x74, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c,
	0x69, 0x74, 0x68, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x4d, 0x6f, 0x6e, 0x6f,
	0x6c, 0x69, 0x74, 0x68, 0xca, 0x02, 0x08, 0x4d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0xe2,
	0x02, 0x14, 0x4d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x4d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74,
	0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monolith_crypto_proto_rawDescOnce sync.Once
	file_monolith_crypto_proto_rawDescData = file_monolith_crypto_proto_rawDesc
)

func file_monolith_crypto_proto_rawDescGZIP() []byte {
	file_monolith_crypto_proto_rawDescOnce.Do(func() {
		file_monolith_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(file_monolith_crypto_proto_rawDescData)
	})
	return file_monolith_crypto_proto_rawDescData
}

var file_monolith_crypto_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_monolith_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_monolith_crypto_proto_goTypes = []interface{}{
	(Signature_Algorithm)(0), // 0: monolith.Signature.Algorithm
	(Hash_Algorithm)(0),      // 1: monolith.Hash.Algorithm
	(*Ed25519Key)(nil),       // 2: monolith.Ed25519Key
	(*PrivateKey)(nil),       // 3: monolith.PrivateKey
	(*PublicKey)(nil),        // 4: monolith.PublicKey
	(*KeyPair)(nil),          // 5: monolith.KeyPair
	(*Signature)(nil),        // 6: monolith.Signature
	(*Hash)(nil),             // 7: monolith.Hash
	(*Signature_Header)(nil), // 8: monolith.Signature.Header
}
var file_monolith_crypto_proto_depIdxs = []int32{
	2, // 0: monolith.PrivateKey.ed25519:type_name -> monolith.Ed25519Key
	2, // 1: monolith.PublicKey.ed25519:type_name -> monolith.Ed25519Key
	3, // 2: monolith.KeyPair.private_key:type_name -> monolith.PrivateKey
	4, // 3: monolith.KeyPair.public_key:type_name -> monolith.PublicKey
	8, // 4: monolith.Signature.header:type_name -> monolith.Signature.Header
	1, // 5: monolith.Hash.algorithm:type_name -> monolith.Hash.Algorithm
	0, // 6: monolith.Signature.Header.algorthm:type_name -> monolith.Signature.Algorithm
	7, // 7: monolith.Signature.Header.fingerprint:type_name -> monolith.Hash
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_monolith_crypto_proto_init() }
func file_monolith_crypto_proto_init() {
	if File_monolith_crypto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monolith_crypto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ed25519Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_crypto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_crypto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_crypto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_crypto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_crypto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monolith_crypto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_monolith_crypto_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PrivateKey_Ed25519)(nil),
	}
	file_monolith_crypto_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*PublicKey_Ed25519)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monolith_crypto_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_monolith_crypto_proto_goTypes,
		DependencyIndexes: file_monolith_crypto_proto_depIdxs,
		EnumInfos:         file_monolith_crypto_proto_enumTypes,
		MessageInfos:      file_monolith_crypto_proto_msgTypes,
	}.Build()
	File_monolith_crypto_proto = out.File
	file_monolith_crypto_proto_rawDesc = nil
	file_monolith_crypto_proto_goTypes = nil
	file_monolith_crypto_proto_depIdxs = nil
}
